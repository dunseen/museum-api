name: Deploy to Oracle Cloud VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up SSH Connection
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 146.235.33.144 >> ~/.ssh/known_hosts

      - name: Copy Repository Files to VPS
        run: |
          rsync -avz --exclude '.git' -e "ssh -i ~/.ssh/id_rsa" . opc@146.235.33.144:/home/opc/app

      - name: Inject Secrets into .env on VPS
        run: |
          ssh -i ~/.ssh/id_rsa opc@146.235.33.144 << 'EOF'

          echo "NODE_ENV=${{ secrets.NODE_ENV }}" > /home/opc/app/.env
          echo "APP_PORT=${{ secrets.APP_PORT }}" > /home/opc/app/.env
          echo "APP_NAME=${{ secrets.APP_NAME }}" > /home/opc/app/.env
          echo "API_PREFIX=${{ secrets.API_PREFIX }}" > /home/opc/app/.env
          echo "APP_FALLBACK_LANGUAGE=${{ secrets.APP_FALLBACK_LANGUAGE }}" > /home/opc/app/.env
          echo "APP_HEADER_LANGUAGE=${{ secrets.APP_HEADER_LANGUAGE }}" > /home/opc/app/.env
          echo "FRONTEND_DOMAIN=${{ secrets.FRONTEND_DOMAIN }}" > /home/opc/app/.env
          echo "BACKEND_DOMAIN=${{ secrets.BACKEND_DOMAIN }}" > /home/opc/app/.env

          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" > /home/opc/app/.env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> /home/opc/app/.env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> /home/opc/app/.env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> /home/opc/app/.env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> /home/opc/app/.env

          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> /home/opc/app/.env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> /home/opc/app/.env

          echo "MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }}" >> /home/opc/app/.env
          echo "MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }}" >> /home/opc/app/.env
          echo "FILE_DRIVER"${{ secrets.FILE_DRIVER }}" >> /home/opc/app/.env
          echo "ACCESS_KEY_ID=${{ secrets.ACCESS_KEY_ID }}" >> /home/opc/app/.env
          echo "SECRET_ACCESS_KEY=${{ secrets.SECRET_ACCESS_KEY }}" >> /home/opc/app/.env

          echo "MAIL_HOST=${{ secrets.MAIL_HOST }}" >> /home/opc/app/.env
          echo "MAIL_PORT=${{ secrets.MAIL_PORT }}" >> /home/opc/app/.env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> /home/opc/app/.env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> /home/opc/app/.env
          echo "MAIL_IGNORE_TLS=${{ secrets.MAIL_IGNORE_TLS }}" >> /home/opc/app/.env
          echo "MAIL_SECURE=${{ secrets.MAIL_SECURE }}" >> /home/opc/app/.env
          echo "MAIL_REQUIRE_TLS=${{ secrets.MAIL_REQUIRE_TLS }}" >> /home/opc/app/.env
          echo "MAIL_DEFAULT_EMAIL=${{ secrets.MAIL_DEFAULT_EMAIL }}" >> /home/opc/app/.env
          echo "MAIL_DEFAULT_NAME=${{ secrets.MAIL_DEFAULT_NAME }}" >> /home/opc/app/.env
          echo "MAIL_CLIENT_PORT=${{ secrets.MAIL_CLIENT_PORT }}" >> /home/opc/app/.env

          echo "AUTH_JWT_SECRET=${{ secrets.AUTH_JWT_SECRET }}" >> /home/opc/app/.env
          echo "AUTH_JWT_TOKEN_EXPIRES_IN=${{ secrets.AUTH_JWT_TOKEN_EXPIRES_IN }}" >> /home/opc/app/.env
          echo "AUTH_REFRESH_SECRET=${{ secrets.AUTH_REFRESH_SECRET }}" >> /home/opc/app/.env
          echo "AUTH_REFRESH_TOKEN_EXPIRES_IN=${{ secrets.AUTH_REFRESH_TOKEN_EXPIRES_IN }}" >> /home/opc/app/.env
          echo "AUTH_FORGOT_SECRET=${{ secrets.AUTH_FORGOT_SECRET }}" >> /home/opc/app/.env
          echo "AUTH_FORGOT_TOKEN_EXPIRES_IN=${{ secrets.AUTH_FORGOT_TOKEN_EXPIRES_IN }}" >> /home/opc/app/.env
          echo "AUTH_CONFIRM_EMAIL_SECRET=${{ secrets.AUTH_CONFIRM_EMAIL_SECRET }}" >> /home/opc/app/.env
          echo "AUTH_CONFIRM_EMAIL_TOKEN_EXPIRES_IN=${{ secrets.AUTH_CONFIRM_EMAIL_TOKEN_EXPIRES_IN }}" >> /home/opc/app/.env
          EOF

      - name: Deploy with Docker
        run: |
          ssh -i ~/.ssh/id_rsa opc@146.235.33.144 << 'EOF'
          cd /home/opc/app
          docker-compose down
          docker-compose pull
          docker-compose up -d --build
          EOF
