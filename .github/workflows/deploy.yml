name: Deploy to Oracle Cloud VPS

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image to GHCR
        run: |
          IMAGE_NAME=ghcr.io/${{ secrets.GHCR_USERNAME }}/museum-api:latest
          docker build \
                       --build-arg NODE_ENV=${{ secrets.NODE_ENV }} \
                       --build-arg APP_PORT=${{ secrets.APP_PORT }} \
                       --build-arg APP_NAME=${{ secrets.APP_NAME }} \
                       --build-arg API_PREFIX=${{ secrets.API_PREFIX }} \
                       --build-arg APP_FALLBACK_LANGUAGE=${{ secrets.APP_FALLBACK_LANGUAGE }} \
                       --build-arg APP_HEADER_LANGUAGE=${{ secrets.APP_HEADER_LANGUAGE }} \
                       --build-arg FRONTEND_DOMAIN=${{ secrets.FRONTEND_DOMAIN }} \
                       --build-arg BACKEND_DOMAIN=${{ secrets.BACKEND_DOMAIN }} \
                       --build-arg DATABASE_HOST=${{ secrets.DATABASE_HOST }} \
                       --build-arg DATABASE_PORT=${{ secrets.DATABASE_PORT }} \
                       --build-arg DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} \
                       --build-arg DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
                       --build-arg DATABASE_NAME=${{ secrets.DATABASE_NAME }} \
                       --build-arg REDIS_HOST=${{ secrets.REDIS_HOST }} \
                       --build-arg REDIS_PORT=${{ secrets.REDIS_PORT }} \
                       --build-arg MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }} \
                       --build-arg MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }} \
                       --build-arg FILE_DRIVER=${{ secrets.FILE_DRIVER }} \
                       --build-arg ACCESS_KEY_ID=${{ secrets.ACCESS_KEY_ID }} \
                       --build-arg SECRET_ACCESS_KEY=${{ secrets.SECRET_ACCESS_KEY }} \
                       --build-arg MAIL_HOST=${{ secrets.MAIL_HOST }} \
                       --build-arg MAIL_PORT=${{ secrets.MAIL_PORT }} \
                       --build-arg MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} \
                       --build-arg MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} \
                       --build-arg MAIL_IGNORE_TLS=${{ secrets.MAIL_IGNORE_TLS }} \
                       --build-arg MAIL_SECURE=${{ secrets.MAIL_SECURE }} \
                       --build-arg MAIL_REQUIRE_TLS=${{ secrets.MAIL_REQUIRE_TLS }} \
                       --build-arg MAIL_DEFAULT_EMAIL=${{ secrets.MAIL_DEFAULT_EMAIL }} \
                       --build-arg MAIL_DEFAULT_NAME=${{ secrets.MAIL_DEFAULT_NAME }} \
                       --build-arg MAIL_CLIENT_PORT=${{ secrets.MAIL_CLIENT_PORT }} \
                       --build-arg AUTH_JWT_SECRET=${{ secrets.AUTH_JWT_SECRET }} \
                       --build-arg AUTH_JWT_TOKEN_EXPIRES_IN=${{ secrets.AUTH_JWT_TOKEN_EXPIRES_IN }} \
                       --build-arg AUTH_REFRESH_SECRET=${{ secrets.AUTH_REFRESH_SECRET }} \
                       --build-arg AUTH_REFRESH_TOKEN_EXPIRES_IN=${{ secrets.AUTH_REFRESH_TOKEN_EXPIRES_IN }} \
                       --build-arg AUTH_FORGOT_SECRET=${{ secrets.AUTH_FORGOT_SECRET }} \
                       --build-arg AUTH_FORGOT_TOKEN_EXPIRES_IN=${{ secrets.AUTH_FORGOT_TOKEN_EXPIRES_IN }} \
                       --build-arg AUTH_CONFIRM_EMAIL_SECRET=${{ secrets.AUTH_CONFIRM_EMAIL_SECRET }} \
                       --build-arg AUTH_CONFIRM_EMAIL_TOKEN_EXPIRES_IN=${{ secrets.AUTH_CONFIRM_EMAIL_TOKEN_EXPIRES_IN }} \
                       -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH Connection
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 146.235.33.144 >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@146.235.33.144 << 'EOF'
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin
          docker pull ghcr.io/${{ secrets.GHCR_USERNAME }}/museum-api:latest
          cd /home/ubuntu/app
          docker-compose down
          docker-compose up -d
          EOF
